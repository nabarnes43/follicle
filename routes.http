### ==============================================
### FOLLICLE API TESTING
### ==============================================
###
### Test your API routes with real data
### Make sure dev server is running: npm run dev
###
### ==============================================

@baseUrl = http://localhost:3000
@userId = MzCTihlddchzDsiVoAjcHbxGaRt1
@follicleId = PR-M-M-C-N
@productId = 100_pure_burdock_and_neem_healthy_scalp_conditioner

### ==============================================
### PRODUCTS API
### ==============================================

### Get all products (with server cache)
GET {{baseUrl}}/api/products

### ==============================================
### INTERACTIONS API
### ==============================================

### Create LIKE interaction
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "follicleId": "{{follicleId}}",
  "type": "like"
}

### Create DISLIKE interaction (removes like)
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "follicleId": "{{follicleId}}",
  "type": "dislike"
}

### Create SAVE interaction
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "follicleId": "{{follicleId}}",
  "type": "save"
}

### Create VIEW interaction (allows multiple)
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "follicleId": "{{follicleId}}",
  "type": "view"
}

### Delete LIKE interaction
DELETE {{baseUrl}}/api/interactions?userId={{userId}}&productId={{productId}}&type=like

### Delete DISLIKE interaction
DELETE {{baseUrl}}/api/interactions?userId={{userId}}&productId={{productId}}&type=dislike

### Delete SAVE interaction
DELETE {{baseUrl}}/api/interactions?userId={{userId}}&productId={{productId}}&type=save

### Test missing field (should return 400)
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "type": "like"
}

### Test invalid type (should return 400)
POST {{baseUrl}}/api/interactions
Content-Type: application/json

{
  "userId": "{{userId}}",
  "productId": "{{productId}}",
  "follicleId": "{{follicleId}}",
  "type": "invalid"
}

### ==============================================
### NOTES
### ==============================================
###
### Expected Responses:
### - 201: Created successfully
### - 200: Deleted successfully  
### - 400: Bad request (missing/invalid data)
### - 404: Not found
### - 409: Conflict (duplicate)
### - 500: Server error
###
### After each test, check Firestore console:
### - interactions/ collection
### - users/{userId}/likedProducts, dislikedProducts, savedProducts
###
### ==============================================